datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ROLE {
  ADMIN
  USER
}

model User {
  id    String @id @default(cuid())
  email String @unique
  name  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  attended Attendee[]
  upgrades Upgrade[]

  role ROLE @default(USER)
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model BBQ {
  id String @id @default(cuid())

  slug          String    @unique
  title         String
  description   String
  date          DateTime?
  proposedDates String[]  @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  attendees Attendee[]
  upgrades  Upgrade[]
}

model Attendee {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
  bbq    BBQ    @relation(fields: [bbqId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bbqId  String

  brings String[]
}

model Upgrade {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  bbq    BBQ     @relation(fields: [bbqId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bbqId  String

  description String
  amount      Int
}
